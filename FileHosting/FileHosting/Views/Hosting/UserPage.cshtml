@{
    Layout = "_Layout";
    ViewData["Title"] = Model.User.Login;
}

@using System.Security.Claims

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@model Web.ViewModels.UserFilesModel

<head>
    <title>@ViewData["Title"]</title>
</head>
<div class="d-grid gap-3">
    <div class="container w-25 d-grid  gap-3">
        <h1 class="text-center">User info</h1>
        <div class="form-group">
            <label class="form-label">Nickname</label><br />
            <input type=text value="@Model.User.Login" class="form-control" readonly />
        </div>
        <div class="form-group">
            <label class="form-label">Role</label><br />
            <input type=text value="@Model.User.RoleName" class="form-control" readonly />
        </div>
        <div class="d-flex justify-content-between">
            @{
                if (User.Identity.Name == Model.User.Email || User.HasClaim(ClaimsIdentity.DefaultRoleClaimType, Common.Enums.Roles.Editor.ToString()) ||
                    User.HasClaim(ClaimsIdentity.DefaultRoleClaimType, Common.Enums.Roles.Admin.ToString()))
                {
                    <a asp-action="ChangeUserInfo" asp-controller="Hosting" asp-route-userId="@Model.User.Id" class="btn btn-outline-dark">Change user info</a>
                }
            }

            @{
                if (User.HasClaim(ClaimsIdentity.DefaultRoleClaimType, Common.Enums.Roles.Admin.ToString()))
                {
                    <a asp-action="DeleteUser" asp-controller="Hosting" asp-route-userId="@Model.User.Id" class="btn btn-outline-dark">Delete user</a>
                }
            }

            @{
                if (User.Identity.Name == Model.User.Email)
                {
                    <a asp-action="Upload" asp-controller="Files" class="btn btn-outline-dark">Upload file</a>
                }
            }
        </div>
    </div>
    <div>
        <h2 class="text-center">User's files</h2>

        <table class="table table-bordered">
            <thead>
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">Category</th>
                    <th scope="col">Link</th>
                </tr>
            </thead>
            @{
                foreach (var file in Model.Files)
                {
                    <tr>
                        <td>@file.Name</td>
                        <td>@file.Category</td>
                        <td>@Html.ActionLink("File page", "FilePage", "Hosting", new { fileId = file.Id })</td>
                    </tr>
                }
            }
        </table>
    </div>
</div>

