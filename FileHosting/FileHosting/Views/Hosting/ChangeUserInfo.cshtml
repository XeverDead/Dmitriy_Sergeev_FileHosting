@{
    Layout = "_Layout";
    ViewData["Title"] = $"Change {Model.Login} info";
}

@using System.Security.Claims

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@await Html.PartialAsync("_Scripts")

@model Web.ViewModels.UserInfoModel

<head>
    <title>@ViewData["Title"]</title>
</head>
<form asp-action="ChangeUserInfo" asp-controller="Hosting" method="post">
    <div class="container w-25 d-grid gap-3">
        <h1 class="text-center">Change user info</h1>
        <div class="validation text-center" asp-validation-summary="ModelOnly"></div>
        <input type="hidden" asp-for="Id" value="@Model.Id" />
        <div class="form-group">
            <label asp-for="Login" class="form-label">Name</label><br />
            <input type="text" asp-for="Login" class="form-control" />
            <span asp-validation-for="Login" />
        </div>
        @{
            if (User.HasClaim(ClaimsIdentity.DefaultRoleClaimType, Common.Enums.Roles.Admin.ToString()))
            {
                <div class="form-group">
                    <label asp-for="Role" class="form-label">Role</label><br />
                    <select asp-for="Role" asp-items="@Html.GetEnumSelectList<Common.Enums.Roles>()" class="form-control"></select>
                    <span asp-validation-for="Role" />
                </div>
            }
            else
            {
                <input type="hidden" asp-for="Role" value="@Model.Role" />
            }
        }
        <div class="form-group clearfix">
            <input type="submit" value="Save" class="btn btn-outline-dark float-start" />
            <a asp-action="UserPage" asp-controller="Hosting" asp-route-userId="@Model.Id" class="btn btn-outline-dark float-end">Cancel</a>
        </div>
    </div>
</form>
